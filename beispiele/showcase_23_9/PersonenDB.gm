Deklination Femininum Singular(Person) Plural(Personen)
Deklination Neutrum Singular(Alter, Alters, Alter, Alter) Plural(Alter)
Deklination Femininum Singular(Email) Plural(Emails)
Deklination Femininum Singular(Adresse) Plural(Adressen)
Deklination Femininum Singular(Straße) Plural(Straßen)
Deklination Femininum Singular(Stadt) Plural(Städte)

Nomen Adresse mit
    der Zeichenfolge Straße,
    der Zeichenfolge PostLeitZahl,
    der Zeichenfolge Stadt:.

Nomen Person mit
    der Zeichenfolge NachName,
    der Zeichenfolge VorName,
    der Zahl Alter,
    der Zeichenfolge Email,
    der Adresse:.

Implementiere die Person:
    Eigenschaft(Zeichenfolge) Name:
        gebe "#{mein VorName} #{mein NachName}" zurück
    .

    Als Zeichenfolge:
        gebe "#{mein Name} (#{mein Alter} Jahre alt)" zurück
    .
.

die Datei ist eine IO::Datei mit dem DateiNamen "personen.csv"

die Zeilen sind Datei: lese_zeilen!

die Personen sind Zeilen: mappe<Person> dich mit etwas Mapbarem(Zeile):

    die Zeichenfolgen sind Zeile: trenne dich zwischen dem Separator "|"!

    der NachName ist die Zeichenfolge[0]
    der VorName ist die Zeichenfolge[1]
    das Alter ist die Zeichenfolge[2] als Zahl
    die Straße ist die Zeichenfolge[3]
    die PostLeitZahl ist die Zeichenfolge[4]
    die Stadt ist die Zeichenfolge[5]
    die Email ist die Zeichenfolge[6]

    die Adresse ist eine Adresse mit der Straße, der PostLeitZahl, der Stadt

    eine Person mit
            dem NachNamen,
            dem VorNamen,
            dem Alter,
            der Email,
            der Adresse
.!


// Aufgabe: gebe alle Personen aus, sortiert nach dem Alter aus, deren Name mit 'B' anfangen
die sortiertenPersonen sind Personen:
    filter dich mit etwas Bedingtem: der Name der Person: startet mit der Zeichenfolge "L"!.!:
    sortiere dich mit etwas Vergleichbarem: das Alter der PersonA - das Alter der PersonB.!

für jede Person in den sortiertenPersonen:
    schreibe die Zeile (die Person als Zeichenfolge)
.

// Aufgabe: wie alt sind die Personen zusammen?
das gemeinsameAlter ist reduziere<Zahl> die sortiertenPersonen mit dem AnfangsWert 0, etwas Reduzierbarem:
    der Akkumulator plus das Alter der Person
.

schreibe die Zeile "Das gemeinsame Alter der Personen ist #{das gemeinsameAlter}!"