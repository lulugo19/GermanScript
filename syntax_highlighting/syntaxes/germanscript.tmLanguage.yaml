"$schema": https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json
name: GermanScript
scopeName: source.germanscript
fileTypes:
- gm
- gms
patterns:
- include: '#defs'
- include: '#classdefs'
- include: '#fundefs'
- include: '#vardecls'
- include: '#keywords'
- include: '#declinations'
- include: '#expressions'
- include: '#args'
- name: comment.line.double-slash.germanscript
- name: comment.line.block.germanscript
  begin: '/\*'
  end: '\*/'

repository:
  
  keywords:
    patterns:
    - name: keyword.control.germanscript
      match: '\b(wenn|solange|für|jeden|jede|jedes|fortfahren|abbrechen|gebe|zurück|intern)\b'
    - name: keyword.other.germanscript
      match: '\b(Maskulinum|Femininum|Neutrum)\b'

  expressions:
    patterns:
    - include: "#strings"
    - include: "#numbers"
    - include: "#booleans"
    - include: "#operators"
    - include: "#variablen"
    - include: "#functions"
  
  strings:
    name: string.quoted.double.germanscript
    begin: '"'
    end: '"'
    patterns:
    - name: constant.character.escape.germanscript
      match: '\\.'
    - name: keyword.operator.interpolation.germanscript
      begin: '#\{'
      end: '\}'
      patterns:
      - include: "#expressions"

  numbers:
    name: constant.numeric.germanscript
    match: '-?([1-9]\d{1,2}|\d)(?:\.\d{3})*(?:,\d+)?'

  booleans:
    name: constant.language.germanscript
    match: '\b(wahr|falsch)\b'
  
  defs:
    name: storage.type.definition.germanscript
    match: \b(Nomen|Verb|Deklination)\b

  classdefs:
    name: meta.class.germanscript
    begin: '\bNomen *.(([A-ZÖÄÜ][a-zöäüß]*)+)+ *(mit)?'
    end: ':'
    beginCaptures:
      '1':
        name: "entity.name.type.class.germanscript"
      '3':
        name: "keyword.other.germanscript"
    patterns:
    - include: '#params'

  fundefs:
    name: meta.function.germanscript
    begin: '\bVerb( *(für) *(([A-ZÖÄÜ][a-zöäüß]*)+))?'
    end: ':'
    beginCaptures:
      '2':
        name: keyword.other.germanscript
      '3':
        name: entity.name.type.class.germanscript
    patterns:
    - include: '#params'
    - include: '#functions'

  vardecls:
    name: meta.vardecl.germanscript
    begin: >
      \b(der|die|das|ein|eine|mein|meine|jener|jene|jenes|dieser|diese|dieses) *
      (neue|neuer|neues) *
      ([A-ZÖÄÜ][a-zöäüß]*)+ *
      (ist|sind)
    end: '$'
    beginCaptures:
      '1':
        name: storage.type.var.germanscript
      '2':
        name: storage.type.modifier.neu.germanscript
      '3':
        name: variable.other.germanscript
      '4':
        name: keyword.operator.germanscript
    patterns:
      - include: '#expressions'

  declinations:
    name: meta.declination
    begin: '\b(Singular|Plural|Duden) *\('
    end: '\)'
    beginCaptures:
      '1':
        name: keyword.other.germanscript
    patterns:
    - name: constant.other.word.germanscript
      match: '\b([A-ZÖÄÜ][a-zöäüß]*)'

  variablen:
    patterns:
    - name: variable.other.germanscript
      match: >
        (\b(
          der|die|das|den|des|dem|
          ein|eine|eines|einer|einige|einigen|einiger|
          mein|meine|meines|meiner|meinem|meinen|
          dein|deine|deines|deiner|deinem|deinen
        )\b)? *([A-ZÖÄÜ][a-zöäüß]*)+
    - name: variable.language.germanscript
      match: '(Ich|Du)'

  params:
    match: >
        \b(
          der|die|das|den|des|dem|
          ein|eine|eines|einer|einige|einigen|einiger
        )\b *([A-ZÖÄÜ][a-zöäüß]*)+ *(([A-ZÖÄÜ][a-zöäüß]*)+)?
    captures:
      '1':
        name: entity.name.type.germanscript
      '2':
        name: entity.name.type.germanscript
      '3':
        name: variable.parameter.germanscript

  args:
    match: >
        \b(
          der|die|das|den|des|dem|
          ein|eine|eines|einer|einige|einigen|einiger|
          mein|meine|meines|meiner|meinem|meinen|
          dein|deine|deines|deiner|deinem|deinen
        )\b *([A-ZÖÄÜ][a-zöäüß]*)+ *(([A-ZÖÄÜ][a-zöäüß]*)+)?
    captures:
      '1':
        name: entity.name.parameter.germanscript
      '2':
        name: entity.name.parameter.germanscript
      '3':
        name: variable.other.germanscript

  operators:
    name: keyword.operator.germanscript
    match: >
      (\||&|=|!=|>|<|>=|<=|+|-|*|/|%|^)|
      \b(ist|sind|oder|und|gleich|ungleich|größer|kleiner|(größer *gleich)|(kleiner *gleich)|mal|durch|modulo|hoch|als)\b

  functions:
    name: entity.name.function
    match: '[a-zöäüß]+'